#
# System calls table, please make sure the table consists of only the syscalls
# really used somewhere in the project.
#
# The template is (name and arguments are optional if you need only __NR_x
# defined, but no real entry point in syscalls lib).
#
# name/alias			code64	code32	arguments
# -----------------------------------------------------------------------
#
read				63	63	(int fd, void *buf, unsigned long count)
write				64	64	(int fd, const void *buf, unsigned long count)
open				!	!	(const char *filename, unsigned long flags, unsigned long mode)
close				57	57	(int fd)
lseek				62	!	(int fd, unsigned long offset, unsigned long origin)
mmap				222	!	(void *addr, unsigned long len, unsigned long prot, unsigned long flags, unsigned long fd, unsigned long offset)
mprotect			226	!	(const void *addr, unsigned long len, unsigned long prot)
munmap				215	215	(void *addr, unsigned long len)
brk				214	214	(void *addr)
rt_sigaction	sigaction	134	134	(int signum, const rt_sigaction_t *act, rt_sigaction_t *oldact, size_t sigsetsize)
rt_sigprocmask	sigprocmask	135	135	(int how, k_rtsigset_t *set, k_rtsigset_t *old, size_t sigsetsize)
rt_sigreturn			139	139	(void)
ioctl				29	29	(unsigned int fd, unsigned int cmd, unsigned long arg)
pread64				67	67	(unsigned int fd, char *buf, size_t count, loff_t pos)
ptrace				117	117	(long request, pid_t pid, void *addr, void *data)
mremap				216	216	(unsigned long addr, unsigned long old_len, unsigned long new_len, unsigned long flag, unsigned long new_addr)
mincore				232	232	(void *addr, unsigned long size, unsigned char *vec)
madvise				233	233	(unsigned long start, size_t len, int behavior)
shmat				196	196	(int shmid, void *shmaddr, int shmflag)
pause				!	!	(void)
nanosleep			101	!	(struct timespec *req, struct timespec *rem)
getitimer			102	102	(int which, const struct itimerval *val)
setitimer			103	103	(int which, const struct itimerval *val, struct itimerval *old)
getpid				172	172	(void)
socket				198	198	(int domain, int type, int protocol)
connect				203	203	(int sockfd, struct sockaddr *addr, int addrlen)
sendto				206	206	(int sockfd, void *buff, size_t len, unsigned int flags, struct sockaddr *addr, int addr_len)
recvfrom			207	207	(int sockfd, void *ubuf, size_t size, unsigned int flags, struct sockaddr *addr, int *addr_len)
sendmsg				211	211	(int sockfd, const struct msghdr *msg, int flags)
recvmsg				212	212	(int sockfd, struct msghdr *msg, int flags)
shutdown			210	210	(int sockfd, int how)
# this was wrong on arm64 - 235 is mbind
bind				200	200	(int sockfd, const struct sockaddr *addr, int addrlen)
setsockopt			208	208	(int sockfd, int level, int optname, const void *optval, socklen_t optlen)
getsockopt			209	209	(int sockfd, int level, int optname, const void *optval, socklen_t *optlen)
clone				220	220	(unsigned long flags, void *child_stack, void *parent_tid, unsigned long newtls, void *child_tid)
exit				93	93	(unsigned long error_code)
wait4				260	!	(int pid, int *status, int options, struct rusage *ru)
waitid				95	95	(int which, pid_t pid, struct siginfo *infop, int options, struct rusage *ru)
kill				129	129	(long pid, int sig)
fcntl				25	!	(int fd, int type, long arg)
flock				32	32	(int fd, unsigned long cmd)
mkdir				!	!	(const char *name, int mode)
rmdir				!	!	(const char *name)
unlink				!	!	(char *pathname)
readlinkat			78	78	(int fd, const char *path, char *buf, int bufsize)
umask				166	166	(int mask)
getgroups			158	158	(int gsize, unsigned int *groups)
setgroups			159	159	(int gsize, unsigned int *groups)
setresuid			147	147	(int uid, int euid, int suid)
getresuid			148	148	(int *uid, int *euid, int *suid)
setresgid			149	149	(int gid, int egid, int sgid)
getresgid			150	150	(int *gid, int *egid, int *sgid)
getpgid				155	155	(pid_t pid)
setfsuid			151	151	(int fsuid)
setfsgid			152	152	(int fsgid)
getsid				156	156	(void)
capget				90	90	(struct cap_header *h, struct cap_data *d)
capset				91	91	(struct cap_header *h, struct cap_data *d)
rt_sigqueueinfo			138	138	(pid_t pid, int sig, siginfo_t *info)
setpriority			140	140	(int which, int who, int nice)
sched_setscheduler		119	119	(int pid, int policy, struct sched_param *p)
sigaltstack			132	132	(const void *uss, void *uoss)
personality			92	92	(unsigned int personality)
prctl				167	167	(int option, unsigned long arg2, unsigned long arg3, unsigned long arg4, unsigned long arg5)
arch_prctl			!	!	(int option, unsigned long addr)
setrlimit			164	!	(int resource, struct krlimit *rlim)
mount				40	40	(char *dev_nmae, char *dir_name, char *type, unsigned long flags, void *data)
umount2				39	39	(char *name, int flags)
gettid				178	178	(void)
futex				98	!	(uint32_t *uaddr, int op, uint32_t val, struct timespec *utime, uint32_t *uaddr2, uint32_t val3)
set_tid_address			96	96	(int *tid_addr)
restart_syscall			128	128	(void)
timer_create			107	107	(clockid_t which_clock, struct sigevent *timer_event_spec, kernel_timer_t *created_timer_id)
timer_settime			110	!	(kernel_timer_t timer_id, int flags, const struct itimerspec *new_setting, struct itimerspec *old_setting)
timer_gettime			108	!	(int timer_id, const struct itimerspec *setting)
timer_getoverrun		109	109	(int timer_id)
timer_delete			111	111	(kernel_timer_t timer_id)
clock_gettime			113	!	(const clockid_t which_clock, const struct timespec *tp)
exit_group			94	94	(int error_code)
set_robust_list			99	99	(struct robust_list_head *head, size_t len)
get_robust_list			100	100	(int pid, struct robust_list_head **head_ptr, size_t *len_ptr)
signalfd4			74	74	(int fd, k_rtsigset_t *mask, size_t sizemask, int flags)
rt_tgsigqueueinfo		240	240	(pid_t tgid, pid_t pid, int sig, siginfo_t *info)
vmsplice			75	75	(int fd, const struct iovec *iov, unsigned long nr_segs, unsigned int flags)
timerfd_settime			86	!	(int ufd, int flags, const struct itimerspec *utmr, struct itimerspec *otmr)
fanotify_init			262	262	(unsigned int flags, unsigned int event_f_flags)
fanotify_mark			263	263	(int fanotify_fd, unsigned int flags, uint64_t mask, int dfd, const char *pathname)
open_by_handle_at		265	265	(int mountdirfd, struct file_handle *handle, int flags)
setns				268	268	(int fd, int nstype)
kcmp				272	272	(pid_t pid1, pid_t pid2, int type, unsigned long idx1, unsigned long idx2)
openat				56	56	(int dirfd, const char *pathname, int flags, mode_t mode)
mkdirat				34	34	(int dirfd, const char *pathname, mode_t mode)
unlinkat			35	35	(int dirfd, const char *pathname, int flags)
memfd_create			279	279	(const char *name, unsigned int flags)
io_setup			0	0	(unsigned nr_events, aio_context_t *ctx)
io_submit			2	2	(aio_context_t ctx_id, long nr, struct iocb **iocbpp)
io_getevents			4	!	(aio_context_t ctx, long min_nr, long nr, struct io_event *evs, struct timespec *tmo)
seccomp				277	277	(unsigned int op, unsigned int flags, const char *uargs)
gettimeofday			169	169	(struct timeval *tv, struct timezone *tz)
preadv_raw			69	69	(int fd, struct iovec *iov, unsigned long nr, unsigned long pos_l, unsigned long pos_h)
userfaultfd			282	282	(int flags)
fallocate			47	47	(int fd, int mode, loff_t offset, loff_t len)
# armv7 only
cacheflush			!	!	(void *start, void *end, int flags)
ppoll				73	!	(struct pollfd *fds, unsigned int nfds, const struct timespec *tmo, const sigset_t *sigmask, size_t sigsetsize)
fsopen				430	430	(char *fsname, unsigned int flags)
fsconfig			431	431	(int fd, unsigned int cmd, const char *key, const char *value, int aux)
fsmount				432	432	(int fd, unsigned int flags, unsigned int attr_flags)
clone3				435	435	(struct clone_args *uargs, size_t size)
pidfd_open			434	434	(pid_t pid, unsigned int flags)
pidfd_getfd			438	438	(int pidfd, int targetfd, unsigned int flags)
